<div class="row">
  <div class="col-12">
    <div class="card">
      <div class="card-header">
        <h3 class="card-title">Управление сотрудниками</h3>
        <div class="card-tools">
          <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addUserModal">
            <i class="fas fa-plus"></i> Добавить сотрудника
          </button>
        </div>
      </div>
      <div class="card-body">
        <table class="table table-bordered table-striped">
          <thead>
            <tr>
              <th>ID</th>
              <th>Логин</th>
              <th>Роль</th>
              <th>Статус</th>
              <th>Создан</th>
              <th>Действия</th>
            </tr>
          </thead>
          <tbody id="users-list">
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>

<!-- Modal -->
<div class="modal fade" id="addUserModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">Добавить сотрудника</h4>
        <button type="button" class="close" data-dismiss="modal">
          <span>&times;</span>
        </button>
      </div>
      <form id="userForm">
        <div class="modal-body">
          <div class="form-group">
            <label>Логин</label>
            <input type="text" class="form-control" id="username" required>
          </div>
          <div class="form-group">
            <label>Пароль</label>
            <input type="password" class="form-control" id="password" required>
          </div>
          <div class="form-group">
            <label>Роль</label>
            <select class="form-control" id="role">
              <option value="fd_manager">FD менеджер</option>
              <option value="rd_manager">RD менеджер</option>
              <option value="admin">Админ</option>
            </select>
          </div>
          <div class="form-group">
            <div class="custom-control custom-checkbox">
              <input class="custom-control-input" type="checkbox" id="is_active" checked>
              <label for="is_active" class="custom-control-label">
                Активен
              </label>
            </div>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">Отмена</button>
          <button type="submit" class="btn btn-primary">Создать</button>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
let users = [];

function loadUsers() {
  fetch('/api/users')
    .then(res => res.json())
    .then(data => {
      users = data;
      renderUsers();
    });
}

function renderUsers() {
  const tbody = document.getElementById('users-list');
  tbody.innerHTML = users.map(user => `
    <tr>
      <td>${user.id}</td>
      <td>${user.username}</td>
      <td><span class="badge ${getRoleBadgeClass(user.role)}">${getRoleName(user.role)}</span></td>
      <td><span class="badge ${user.is_active ? 'badge-success' : 'badge-secondary'}">${user.is_active ? 'Активен' : 'Неактивен'}</span></td>
      <td>${new Date(user.created_at).toLocaleString()}</td>
      <td>
        <button class="btn btn-warning btn-sm" onclick="toggleUserStatus(${user.id})">
          <i class="fas ${user.is_active ? 'fa-ban' : 'fa-check'}"></i> ${user.is_active ? 'Деактивировать' : 'Активировать'}
        </button>
        <button class="btn btn-danger btn-sm" onclick="deleteUser(${user.id})">
          <i class="fas fa-trash"></i> Удалить
        </button>
      </td>
    </tr>
  `).join('');
}

function getRoleName(role) {
  switch(role) {
    case 'admin': return 'Админ';
    case 'fd_manager': return 'FD менеджер';
    case 'rd_manager': return 'RD менеджер';
    default: return role;
  }
}

function getRoleBadgeClass(role) {
  switch(role) {
    case 'admin': return 'badge-danger';
    case 'fd_manager': return 'badge-primary';
    case 'rd_manager': return 'badge-info';
    default: return 'badge-secondary';
  }
}

function toggleUserStatus(id) {
  const user = users.find(u => u.id === id);
  if (!user) return;

  const newStatus = !user.is_active;
  fetch(`/api/users/${id}`, {
    method: 'PUT',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({
      username: user.username,
      password: user.password,
      role: user.role,
      is_active: newStatus
    })
  }).then(() => loadUsers());
}

function deleteUser(id) {
  if (confirm('Удалить сотрудника?')) {
    fetch(`/api/users/${id}`, { method: 'DELETE' })
      .then(() => loadUsers());
  }
}

document.getElementById('userForm').addEventListener('submit', (e) => {
  e.preventDefault();
  const formData = {
    username: document.getElementById('username').value,
    password: document.getElementById('password').value,
    role: document.getElementById('role').value,
    is_active: document.getElementById('is_active').checked
  };

  fetch('/api/users', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify(formData)
  }).then(() => {
    $('#addUserModal').modal('hide');
    document.getElementById('userForm').reset();
    document.getElementById('is_active').checked = true; // Сброс к checked
    loadUsers();
  });
});

loadUsers();
</script>